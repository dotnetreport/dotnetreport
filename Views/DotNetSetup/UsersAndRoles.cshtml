@using Newtonsoft.Json;
@{
    Layout = "~/Views/shared/_Layout.ReportSetup.cshtml";
}

@section head{
    <link href="~/lib/x-editable-bs4/css/bootstrap-editable.css" rel="stylesheet" />
    <link href="~/lib/tributejs/tribute.css" rel="stylesheet" />

    <style type="text/css">
        .glyphicon-ok:before {
            content: "\f00c";
        }

        .glyphicon-remove:before {
            content: "\f00d";
        }

        .glyphicon {
            display: inline-block;
            font: normal normal normal 14px/1 FontAwesome;
            font-size: inherit;
            text-rendering: auto;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .selected-option {
            border: 1px solid #007bff; /* A subtle blue border */
            box-shadow: 0 0 10px rgba(0, 123, 255, 0.5); /* A light blue shadow for emphasis */
        }
    </style>
}
@section scripts{
    <script src="~/lib/tributejs/tribute.min.js"></script>
    <script src="~/js/dotnetreport-setup.js"></script>
    <script src="~/lib/knockout-mapping/knockout.mapping.js"></script>
    <script src="~/lib/x-editable-bs4/js/bootstrap-editable.min.js"></script>
    <script src="~/lib/knockout-x-editable/knockout.x-editable.min.js"></script>
    <script type="text/javascript">

        $.fn.editable.defaults.mode = 'inline';
        $('.helptip').tooltip();

        function closeall() {
            $('.panel-collapse.in')
                .collapse('hide');
        };

        function openall() {
            $('.panel-collapse.in')
                .collapse('show');
        };

        $(document).ready(function () {
            var queryParams = Object.fromEntries((new URLSearchParams(window.location.search)).entries());
            ajaxcall({ url: '@Url.Action("LoadSetupSchema", "DotNetReportApi")' + '?databaseApiKey=' + (queryParams.databaseApiKey || '') }).done(function (model) {
                if (model && model.noAccount === true) {
                    $("#noaccountModal").modal('show');
                    return;
                }

                var options = {
                    model: model,
                    reportsApiUrl: model.ApiUrl,
                    getUsersAndRoles: '@Url.Action("GetUsersAndRoles", "DotNetReportApi")',
                    apiUrl: '@Url.Action("CallReportApi", "DotNetReportApi")',
                    ExistingUsersUrl: '@Url.Action("ExistingUsersTable", "DotNetUserApi")',
                    ExistingRoleUrl: '@Url.Action("ExistingRoleTable", "DotNetUserApi")',
                    ExistingUserRoleUrl: '@Url.Action("ExistingUserRoleTable", "DotNetUserApi")',
                    CreatingUserTableUrl: '@Url.Action("CreateandInsertUser", "DotNetUserApi")',
                    CreatingRoleTableUrl: '@Url.Action("CreateandInsertRole", "DotNetUserApi")',
                    CreatingUserRoleTableUrl: '@Url.Action("CreateandInsertUserRole", "DotNetUserApi")',
                    UpdateUserDataUrl: '@Url.Action("UpdateUser", "DotNetUserApi")',
                    UpdateRoleDataUrl: '@Url.Action("UpdateRole", "DotNetUserApi")',
                    UpdateUserRoleDataUrl: '@Url.Action("UpdateUserRole", "DotNetUserApi")',
                    DeleteUserDataUrl: '@Url.Action("DeleteUser", "DotNetUserApi")',
                    DeleteRoleDataUrl: '@Url.Action("DeleteRole", "DotNetUserApi")',
                    DeleteUserRoleDataUrl: '@Url.Action("DeleteUserRole", "DotNetUserApi")',
                    LoadRolesUrl: '@Url.Action("LoadRolesData","DotNetUserApi")',
                    UpdateUserConfigSettingUrl: '@Url.Action("UpdateUserConfigSetting", "DotNetReportApi")',
                    saveSettingAccessUrl: '@Url.Action("SaveSettingAccess", "DotNetReportApi")',
                };

                var vm = new manageViewModel(options);
                vm.setupManageAccess();
                ko.applyBindings(vm);
                vm.UserAndRolesConfig.init();
               
            });
        });

    </script>
}


@section dboptions {
    <a class="bg-dark list-group-item list-group-item-action" href="/dotnetsetup/" >
        <div class="d-flex w-100 justify-content-start align-items-center">
            <span class="fa fa-database fa-fw mr-3"></span>
            <span class="menu-collapsed">DB Connections</span>
        </div>
    </a>
}

@section useroptions {

    <a class="bg-dark list-group-item list-group-item-action" href="#useroptions" aria-controls="home" role="tab" data-toggle="tab">
        <div class="d-flex w-100 justify-content-start align-items-center">
            <span class="fa fa-gear fa-fw mr-3"></span>
            <span class="menu-collapsed">Configuration</span>
        </div>
    </a>


    <a href="#manageusers" aria-controls="manageusers" role="tab" data-toggle="tab" class="bg-dark list-group-item list-group-item-action">
        <div class="d-flex w-100 justify-content-start align-items-center">
            <span class="fa fa-users fa-fw mr-3"></span>
            <span class="menu-collapsed">Users and Roles</span>
        </div>
    </a>

    <a href="#manageaccess" aria-controls="manageaccess" role="tab" data-toggle="tab" class="bg-dark list-group-item list-group-item-action">
        <div class="d-flex w-100 justify-content-start align-items-center">
            <span class="fa fa-user-secret fa-fw mr-3"></span>
            <span class="menu-collapsed">Manage Access</span>
        </div>
    </a>

    <a href="#settingpage" aria-controls="settingpage" role="tab" data-toggle="tab" class="bg-dark list-group-item list-group-item-action">
        <div class="d-flex w-100 justify-content-start align-items-center">
            <span class="fa fa-gears fa-fw mr-3"></span>
            <span class="menu-collapsed">System Settings</span>
        </div>
    </a>
}

<div>
    <div class="alert alert-danger">
        Do not expose this Setup Tool to end users who should not have access to it. Ideally, only Developers should be given access to this utility.
    </div>
    
    <div class="d-sm-block d-md-none">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="nav-item"><a class="nav-link active" href="#useroptions" aria-controls="manageusers" role="tab" data-toggle="tab">Configuration</a></li>
            <li role="presentation" class="nav-item"><a class="nav-link" href="#manageusers" aria-controls="manageusers" role="tab" data-toggle="tab">Users and Roles</a></li>
            <li role="presentation" class="nav-item"><a class="nav-link" href="#manageaccess" aria-controls="manageaccess" role="tab" data-toggle="tab">Manage Reports Access</a></li>
            <li role="presentation" class="nav-item"><a class="nav-link" href="#settingpage" aria-controls="settingpage" role="tab" data-toggle="tab">Setting Access</a></li>

        </ul>
    </div>
    <br />
</div>
<!-- Tab panes -->
<div class="fix-content" style="display: none;" data-bind="visible: true">
    <div class="tab-content">

        <div id="useroptions" class="tab-pane active" data-bind="with: UserAndRolesConfig">
            <div>
                <b>User and Roles Management Options</b><br />
                <p>Please select how you want to use DNR with your users and manage secure login access.</p>
                <br />

                <div class="col-md-8 mb-4">
                    <div class="card" data-bind="css: { 'selected-option': selectedUserConfig() === 'not-managed' }">
                        <div class="card-body">
                            <div class="form-check font-weight-bold error">
                                <input type="checkbox" id="not-managed" class="form-check-input" data-bind="checked: _selectedUserConfig, click: function() { confirmUpdate('not-managed'); return true; }, checkedValue: 'not-managed'">
                                <label class="form-check-label" for="not-managed">No Login Required</label>
                            </div>
                            <div class="card-text">
                                Use DNR openly, and allow any user with a link to directly access the system and Create/Manage/Run any Report or Dashboard.
                                <div class="padded-top"></div>
                                <div class="padded-div small alert alert-danger">
                                    <i class="fa fa-lightbulb-o"></i> This option is NOT recommended. It will make DNR publicly available without Authentication or Login, as long as a user has the working URL to the system. There are limited options to prevent unauthorized users from editing existing reports, and the admin section will still require login.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-8 mb-4">
                    <div class="card" data-bind="css: { 'selected-option': selectedUserConfig() === 'dnr-managed' }">
                        <div class="card-body">
                            <div class="form-check font-weight-bold">
                                <input type="checkbox" id="dnr-managed" class="form-check-input" data-bind="checked: _selectedUserConfig, click: function() { confirmUpdate('dnr-managed'); return true; }, checkedValue: 'dnr-managed'">
                                <label class="form-check-label" for="dnr-managed">Managed by DNR</label>
                            </div>
                            <div class="card-text">
                                Create your Users and Roles using DNR. We will present you with options to create, manage Users, and their Roles, and store and manage all your users and access.<br />
                                <div class="padded-top"></div>
                                <div class="padded-div small alert bg-light">
                                    <i class="fa fa-lightbulb-o"></i> This option works best when using DNR as a "Standalone System" where you would give access to your users to DNR Reports and Dashboards using <b>this</b> web application. You have limited options for Multi-Tenancy Support.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-8 mb-4">
                    <div class="card" data-bind="css: { 'selected-option': selectedUserConfig() === 'code-managed' }">
                        <div class="card-body">
                            <div class="form-check font-weight-bold">
                                <input type="checkbox" id="code-managed" class="form-check-input" data-bind="checked: _selectedUserConfig, click: function() { confirmUpdate('code-managed'); return true; }, checkedValue: 'code-managed'">
                                <label class="form-check-label" for="code-managed">Embedded / Code</label>
                                <label class="badge badge-info"><i class="fa fa-star"></i> Most Popular</label>
                            </div>
                            <div class="card-text">
                                Embed DNR directly into your current Web Application code, and work directly with your existing Authentication and Claims infrastructure.
                                <div class="padded-top"></div>
                                <div class="padded-div small alert bg-light">
                                    <i class="fa fa-lightbulb-o"></i> This is the ideal option when you want to Embed DNR in your existing SaaS or proprietary Web Application, especially if you want to take full advantage of all the Multi-Tenancy Client features of DNR. It will require some coding and updating in your web application.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-8 mb-4">
                    <div class="card" data-bind="css: { 'selected-option': selectedUserConfig() === 'api-managed' }">
                        <div class="card-body">
                            <div class="form-check font-weight-bold">
                                <input type="checkbox" id="api-managed" class="form-check-input" disabled="disabled" data-bind="checked: _selectedUserConfig, click: function() { confirmUpdate('api-managed'); return true; }, checkedValue: 'api-managed'">
                                <label class="form-check-label" for="api-managed">Using your API or SSO Service</label>

                                <label class="badge badge-warning" title="This option is not available yet">Coming Soon</label>
                            </div>
                            <div class="card-text">
                                Manage your Users, Roles, and their Claims access using your own code and infrastructure outside of DNR. Just connect your API or SSO Service, and DNR will authorize login access using your service.
                                <div class="padded-top"></div>
                                <div class="padded-div small alert bg-light">
                                    <i class="fa fa-lightbulb-o"></i> This option works best for using DNR as a "Standalone System" as well, where you would give access to your users to DNR Reports and Dashboards using <b>this</b> web application. This could work for the "Embedded" option as well using an iFrame, but it's not ideal for embedding. Some coding will be required.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>
        <div id="manageusers" class="tab-pane" data-bind="with: UserAndRolesConfig">
            <b>Manage Users and Roles</b>
            <p>
                Configure and manage your Application Users and Roles in DNR.
            </p>

            <div data-bind="if: selectedUserConfig() == 'not-managed'">
                <div class="alert alert-danger">
                    Your selected option is <b>No Login Required</b>. With this option, you do not need to manage or setup users at all.<br />
                    Any user will be able to Run or Manage Reports and Dashboard <b>IF</b> you deploy this web application and provide the URL to a user
                </div>
            </div>

            <div data-bind="if: selectedUserConfig() == 'code-managed'">
                <div class="alert alert-info">
                    Your selected option is <b>Embedded / Code</b>. With this option, you do not need to manage or setup users here.<br />
                    You need to install DNR in your application using the corrent NuGet package. We have different NuGet install packages for different versions of .NET
                </div>
            </div>

            <div data-bind="if: selectedUserConfig() == 'api-managed'">
                <div class="alert alert-info">
                    Your selected option is <b>Using your API or SSO</b>. With this option, you can provide your API URL or SSO Redirect URL below.<br />
                    Your Authorization Service must return JSON or Claims in the format described below. 
                </div>
            </div>

            <div data-bind="if: selectedUserConfig() == 'dnr-managed'">
                <div class="alert alert-info">
                    Your selected option is <b>Managed by DNR</b>. With this option, you can create and manage your users who will access the system below. <br />
                    Users and Roles will be managed using Standard ASP.NET Individual Account Identity. It uses "AspNetUsers" and "AspNetUserRoles" tables. If these tables don't exist in your database, they will be created, otherwise existing tables will be used. 
                </div>
                <div>
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="nav-item"><a class="nav-link active" href="#setup-users" aria-controls="setup-users" role="tab" data-toggle="tab">Users</a></li>
                        <li role="presentation" class="nav-item"><a class="nav-link" href="#setup-userroles" aria-controls="setup-userroles" role="tab" data-toggle="tab">User Roles</a></li>
                        <li role="presentation" class="nav-item"><a class="nav-link" href="#setup-useruserroles" aria-controls="setup-useruserroles" role="tab" data-toggle="tab">Assign Roles to Users</a></li>
                    </ul>
                </div>

                <div class="tab-content">
                    <div id="setup-users" class="tab-pane active padded-top">                        
                        <div class="col-lg-12 col-md-8 col-sm-8">                         
                            <div class="padded-top">
                                <button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#createUserModal">Create New User</button>
                            </div>
                            <br />
                            <table class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>User Name</th>
                                        <th>Email</th>
                                        <th>Active</th>
                                        <th>Action</th>
                                        <!-- Add more columns as needed -->
                                    </tr>
                                </thead>
                                <tbody data-bind="foreach: usersTableData">
                                    <tr>
                                        <td data-bind="text: UserName"></td>
                                        <td data-bind="text: Email"></td>
                                        <td data-bind="text: IsActive ? 'Yes': 'No'"></td>
                                        <td>
                                            <button class="btn btn-sm btn-primary" data-toggle="modal" data-target="#editUserModal" data-bind="click: function() { $parent.openEditUserModal($data); }">Edit</button>
                                            <button class="btn btn-sm btn-danger" data-toggle="modal" data-target="#deleteUserModal" data-bind="click: function() { $parent.openDeleteUserModal($data); }">Delete</button>
                                        </td>
                                        <!-- Add more columns as needed -->
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div data-bind="if: usersTableData().length === 0" class="col-md-8 col-sm-8">
                            <p>No data found.</p>
                        </div>
                    </div>
                    <div id="setup-userroles" class="tab-pane padded-top">
                        <div class="col-lg-12 col-md-8 col-sm-8">
                            <div class="padded-top">
                                <button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#createRoleModal">Create New Role</button>
                            </div>
                            <br />
                            <table class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>Role</th>
                                        <th>Action</th>
                                        <!-- Add more columns as needed -->
                                    </tr>
                                </thead>
                                <tbody data-bind="foreach: roleTableData">
                                    <tr>
                                        <td data-bind="text: RoleName"></td>
                                        <td>
                                            <button class="btn btn-sm btn-primary" data-toggle="modal" data-target="#editRoleModal" data-bind="click: function() { $parent.openEditRoleModal($data); }">Edit</button>
                                            <button class="btn btn-sm btn-danger" data-toggle="modal" data-target="#deleteRoleModal" data-bind="click: function() { $parent.openDeleteRoleModal($data); }">Delete</button>
                                        </td>
                                        <!-- Add more columns as needed -->
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <div data-bind="if: roleTableData().length === 0" class="col-md-8 col-sm-8">
                            <p>No data found.</p>
                        </div>
                    </div>

                    <div id="setup-useruserroles" class="tab-pane padded-top">
                        <div class="col-lg-12 col-md-8 col-sm-8">
                                <div class="padded-top">
                                <button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#createUserRoleModal">Assign New Role To User</button>
                            </div>
                            <br />
                            <table class="table table-striped table-bordered ">
                                <thead>
                                    <tr>
                                        <th>User Name</th>
                                        <th>Role</th>
                                        <th>Action</th>
                                        <!-- Add more columns as needed -->
                                    </tr>
                                </thead>
                                <tbody data-bind="foreach: userRoleTableData">
                                    <tr>
                                        <td data-bind="text: UserName"></td>
                                        <td data-bind="text: RoleName"></td>
                                        <td>
                                            <button class="btn btn-sm btn-primary" data-toggle="modal" data-target="#editUserRoleModal" data-bind="click: function() { $parent.openEditUserRoleModal($data); }"">Edit</button>
                                            <button class="btn btn-sm btn-danger" data-toggle="modal" data-target="#deleteUserRoleModal" data-bind="click: function() { $parent.openDeleteUserRoleModal($data); }">Delete</button>
                                        </td>
                                        <!-- Add more columns as needed -->
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <div data-bind="if: userRoleTableData().length === 0" class="col-md-8 col-sm-8">
                            <p>No data found.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="manageaccess" class="tab-pane">
            <b>Manage Access</b>
            <p>
                Configure and manage Access to run or manage reports in DNR by User or User Roles
            </p>
            <div data-bind="foreach: reportsAndFolders" class="card" style="margin-left: 20px;">
                <div class="card-body">
                    <a class="btn btn-link" role="button" data-toggle="collapse" data-bind="attr: {href: '#folder-' + folderId }">
                        <i class="fa fa-folder"></i>&nbsp;<span data-bind="text: folder"></span>
                    </a>
                    <div class="collapse" data-bind="attr: {id: 'folder-' + folderId }">
                        <div data-bind="if: reports.length == 0">
                            No Reports found in this folder
                        </div>
                        <ul class="list-group" data-bind="foreach: reports">
                            <li class="list-group-item">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div>
                                            <label class="list-group-item-heading">
                                                <span class="fa" data-bind="css: {'fa-file': reportType=='List', 'fa-th-list': reportType=='Summary', 'fa-bar-chart': reportType=='Bar', 'fa-pie-chart': reportType=='Pie',  'fa-line-chart': reportType=='Line', 'fa-globe': reportType =='Map'}" style="font-size: 14pt; color: #808080"></span>
                                                <span data-bind="text: reportName"></span>
                                            </label>
                                        </div>
                                        <p class="list-group-item-text small" data-bind="text: reportDescription"></p>

                                        <div class="small" style="padding-top: 10px;">
                                            <b>Current Report Access</b><br />
                                            Manage by User <span class="badge badge-info" data-bind="text: userId ? userId : 'No User'"></span>
                                            <br />
                                            View only by User <span class="badge badge-info" data-bind="text: (viewOnlyUserId ? viewOnlyUserId : (userId ? userId : 'Any User'))"></span>
                                            <br />
                                            <div data-bind="if: deleteOnlyUserId">
                                                Delete only by User <span class="badge badge-info" data-bind="text: deleteOnlyUserId"></span>
                                                <br />
                                            </div>
                                            <div data-bind="if: userRole">
                                                Manage by Role <span class="badge badge-info" data-bind="text: userRole ? userRole : 'No Role'"></span>
                                                <br />
                                            </div>
                                            <div data-bind="if: viewOnlyUserRole">
                                                View only by Role <span class="badge badge-info" data-bind="text: viewOnlyUserRole ? viewOnlyUserRole : 'Any Role'"></span>
                                                <br />
                                            </div>
                                            <div data-bind="if: deleteOnlyUserRole">
                                                Delete only by Role <span class="badge badge-info" data-bind="text: deleteOnlyUserRole ? deleteOnlyUserRole : 'Same as Manage'"></span>
                                                <br />
                                            </div>
                                            <div>
                                                For Client <span class="badge badge-info" data-bind="text: clientId ? clientId : 'All Clients'"></span>
                                                <br />
                                            </div>
                                        </div>
                                        <br />
                                        <br />
                                        <button class="btn btn-sm btn-primary" data-bind="click: function() { changeAccess(!changeAccess())}, text: !changeAccess() ? 'Change Access': 'Cancel Changing Access', hidden: changeAccess">Change Access</button>
                                    </div>

                                    <div data-bind="if: changeAccess" class="col-md-9">
                                        <div style="border-left: 1px solid; padding-left: 10px;">
                                            <div data-bind="template: {name: 'manage-access-template', data: $root }"></div>
                                            <br />
                                            <br />
                                            <button class="btn btn-sm btn-primary" data-bind="click: saveAccessChanges">Save Access Changes</button>
                                            <button class="btn btn-sm btn-primary" data-bind="click: function() { changeAccess(!changeAccess())}, text: !changeAccess() ? 'Change Access': 'Cancel Changing Access'">Change Access</button>

                                        </div>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Add settingpage -->
        <div id="settingpage" class="tab-pane">
            <b>Setting Access</b>
            <p>
                Configure and manage Access to run or manage reports in DNR by User or User Roles
            </p>
            <div class="row">
                <div class="col-md-8 mb-4">
                    <div class="card" style="margin: 20px;">
                        <div class="card-body">
                            <form id="settingsAccessForm" data-bind="with: SettingPage">
                                <label for="backendApiUrl">Backend Service API Url:</label>
                                <input type="text" class="form-control" id="apiurl" required name="backendApiUrl" data-bind="value: backendApiUrl">
                                <div class="invalid-feedback">BackendApiUrl is required.</div>
                                <div >
                                    <label for="theme">Application Theme:</label>
                                    <select class="form-control" id="theme" data-bind="options: appThemes,
                                               optionsText: 'name',
                                               optionsValue: 'value',
                                               value:selectedAppTheme
                                               optionsCaption: 'Select a Theme'"></select>
                                    <br>
                                    <div class="invalid-feedback">Application Theme is required.</div>
                                </div>
                                <div >
                                    <label for="timezone">Default time zone:</label>
                                    <select class="form-control" id="timezoneSelect" data-bind="options: timeZones,
                                               optionsText: 'displayName',
                                               optionsValue: 'value',
                                               value:selectedTimeZone
                                               optionsCaption: 'Select a timezone'"></select>
                                    <br>
                                    <div class="invalid-feedback">Select timezone is required.</div>
                                </div>
                            <div >
                                        <div class="card-body">
                                            <h5 class="card-title">Scheduled Job Email Settings:</h5>
                                            <div class="form-group">
                                                <label for="emailUsername">Email Username:</label>
                                            <input type="text" class="form-control" id="emailUsername" required data-bind="value: emailUsername">
                                                <div class="invalid-feedback">Email Username is required.</div>
                                            </div>
                                            <div class="form-group">
                                                <label for="emailPassword">Email Password:</label>
                                            <input type="password" class="form-control" id="emailPassword" required data-bind="value: emailPassword">
                                                <div class="invalid-feedback">Email Password is required.</div>
                                            </div>
                                            <div class="form-group">
                                                <label for="emailServer">Email Server:</label>
                                                <input type="text" class="form-control" id="emailServer" required data-bind="value: emailServer">
                                                <div class="invalid-feedback">Email Server is required.</div>
                                            </div>
                                            <div class="form-group">
                                                <label for="emailPort">Email Port:</label>
                                                <input type="text" class="form-control" id="emailPort" required data-bind="value: emailPort">
                                                 <div class="invalid-feedback">Email Port is required.</div>
                                            </div>
                                              <div class="form-group">
                                                <label for="emailName">From Email Name:</label>
                                            <input type="text" class="form-control" id="emailName" required data-bind="value: emailName">
                                                <div class="invalid-feedback">Email Name is required.</div>
                                            </div>
                                            <div class="form-group">
                                                <label for="emailaddress">From Email:</label>
                                            <input type="email" class="form-control" id="emailaddress" required name="emailaddress" data-bind="value: emailAddress">
                                                <div class="invalid-feedback">From Email is required.</div>
                                            </div>
                                        </div>
                                </div>
                                <button type="button" id="saveSettings" class="btn btn-primary" data-bind="click: saveSettings">Save</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

    </div>
</div>

<div class="modal fade" id="role-access-modal" role="dialog" tabindex="-2">
    <div class="modal-dialog" role="document">
        <div class="modal-content" data-bind="with: editAllowedRoles">
            <div class="modal-header">
                <h4 class="modal-title">Manage Access by Roles</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <p>Choose User Roles that will have Access</p>
                <p class="small">Note: All Users will have access if no restricted roles are setup</p>
                <div class="list-group" data-bind="foreach: AllowedRoles">
                    <div class="list-group-item" style="padding-top: 2px; padding-bottom: 2px;">
                        <span data-bind="text: $data"></span>
                        <button class="btn btn-sm btn-danger pull-right"><i class="fa fa-trash" data-bind="click: $root.removeAllowedRole"></i></button>
                    </div>
                </div>

                <div class="row">
                    <div class="col-10">
                        <input class="form-control" type="text" data-bind="value: $root.newAllowedRole" placeholder="Ex Sales">
                    </div>
                    <div class="col-2">
                        <button class="btn btn-primary" data-bind="click: $root.addAllowedRole">Add</button>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Done</button>
            </div>
        </div>
    </div>
</div>

<div class="clearfix"></div>

<!-- Create Role Modal -->
<div class="modal" id="createRoleModal" role="dialog">
    <div class="modal-dialog" role="document" data-bind="with: UserAndRolesConfig">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Create Role</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="userName">Role Name:</label>
                        <input type="text" id="rolename" class="form-control" required name="rolename" data-bind="value: roleName">
                        <div class="invalid-feedback">RoleName is required.</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bind="click: createRole">Save Role</button>
            </div>
        </div>
    </div>
</div>
<!-- Edit Role Modal -->
<div class="modal" id="editRoleModal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Role</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" data-bind="with: UserAndRolesConfig.SelectedRole">
                <form>
                    <div class="form-group">
                        <label>Role ID:</label>
                        <input type="text" class="form-control" data-bind="value: roleId" readonly>
                    </div>
                    <div class="form-group">
                        <label for="editRoleName">Role Name:</label>
                        <input type="text" class="form-control text-box" required id="editRoleName" data-bind="value: roleName">
                        <div class="invalid-feedback">RoleName is required.</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer" data-bind="with: UserAndRolesConfig">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bind="click: function() { EditRole(); }">Save Role</button>
            </div>
        </div>
    </div>
</div>
<!-- Delete Role Modal -->
<div class="modal" id="deleteRoleModal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Delete Role</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" data-bind="with: UserAndRolesConfig.SelectedRole">
                <p>Are you sure you want to delete this role?</p>
                <!-- Hidden input for Role ID -->
                <input type="hidden" id="deleteRoleId" data-bind="value: roleId">
            </div>
            <div class="modal-footer" data-bind="with: UserAndRolesConfig">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" data-bind="click: DeleteRole">Delete</button>
            </div>
        </div>
    </div>
</div>


<!-- Create User Modal -->
<div class="modal" id="createUserModal" role="dialog">
    <div class="modal-dialog" role="document" data-bind="with: UserAndRolesConfig">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Create User</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="userName">User Name:</label>
                        <input type="text" id="userName" class="form-control" required name="UserName" data-bind="value: userName">
                        <div class="invalid-feedback">UserName is required.</div>
                    </div>
                    <div class="form-group">
                        <label for="email">Email:</label>
                        <input type="email" id="email" class="form-control" required name="Email" data-bind="value: email">
                        <div class="invalid-feedback">Email is required.</div>

                    </div>
                    <div class="form-group">
                        <label for="password">Password:</label>
                        <input type="password" id="password" class="form-control" required name="Password" data-bind="value: password">
                        <div class="invalid-feedback">Password is required.</div>

                    </div>
                    <div class="form-group">
                        <label for="isactive">Active?</label>
                        <input type="checkbox" id="isactive" name="isactive" data-bind="checked: isactive">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bind="click: createUser">Save User</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal" id="editUserModal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit User</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" data-bind="with: UserAndRolesConfig.SelectedUser">
                <form>
                    <div class="form-group">
                        <label for="editUserId">User ID:</label>
                        <input type="text" class="form-control" id="editRoleId" data-bind="value: userId" readonly>
                    </div>
                    <div class="form-group">
                        <label for="userName">User Name:</label>
                        <input type="text" id="edituserName" class="form-control" required name="UserName" data-bind="value: userName">
                        <div class="invalid-feedback">UserName is required.</div>
                    </div>
                    <div class="form-group">
                        <label for="email">Email:</label>
                        <input type="email" id="editemail" class="form-control" required name="Email" data-bind="value: email">
                        <div class="invalid-feedback">Email is required.</div>

                    </div>
                    <div class="form-group">
                        <label for="isactive">Active?</label>
                        <input type="checkbox" id="isactive" name="isactive" data-bind="checked: isactive">
                    </div>
                </form>
            </div>
            <div class="modal-footer" data-bind="with: UserAndRolesConfig">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bind="click: function() {  EditUser();}">Save User</button>
            </div>
        </div>
    </div>
</div>


<!-- Delete User Modal -->
<div class="modal" id="deleteUserModal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Delete User</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" data-bind="with: UserAndRolesConfig.SelectedUser">
                <p>Are you sure you want to delete this User?</p>
                <!-- Hidden input for Role ID -->
                <input type="hidden" id="deleteUserId" data-bind="value: userId">
            </div>
            <div class="modal-footer" data-bind="with: UserAndRolesConfig">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" data-bind="click: function() {DeleteUser(); }">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Create User Role Modal -->
<div class="modal" id="createUserRoleModal" role="dialog">
    <div class="modal-dialog" role="document" data-bind="with: UserAndRolesConfig">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Create User Role</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="userName">Select User:</label>
                        <select class="form-control" id="Users" data-bind="options: usersTableData, optionsText: 'UserName', optionsValue: 'UserId', value: selectedUserId"></select>
                        <div class="invalid-feedback">Select A User is required.</div>
                    </div>
                    <div class="form-group">
                        <label>Select Roles:</label>
                        <select class="form-control" data-bind="options: roleTableData, optionsText: 'RoleName', optionsValue: 'RoleId', value: selectedRolesId"></select>
                        <div class="invalid-feedback">Select a Role is required.</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bind="click: function() {  createUserRoleTable();}">Save User Role</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit User Role Modal -->
<div class="modal" id="editUserRoleModal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit User Role</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group" data-bind="with: UserAndRolesConfig.SelectedUserRole">
                        <label for="editUserRoleId">User ID:</label>
                        <input type="text" class="form-control" id="editUserRoleId" data-bind="value: userId" readonly>
                    </div>
                    <div class="form-group" data-bind="with: UserAndRolesConfig.SelectedUserRole">
                        <label for="edituserroleName">User Name:</label>
                        <input type="text" id="edituserroleName" class="form-control" required name="UserName" data-bind="value: userName" readonly>
                        <div class="invalid-feedback">UserName is required.</div>
                    </div>
                    <div class="form-group" data-bind="with: UserAndRolesConfig">
                        <label for="userRoles">Select Roles:</label>
                        <select class="form-control" id="userRoles" data-bind="options: roleTableData, optionsText: 'RoleName', optionsValue: 'RoleId', value: selectedRolesId"></select>
                        <div class="invalid-feedback">Select a Role is required.</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer" data-bind="with: UserAndRolesConfig">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bind="click: function() {  EditUserRoles();}">Save User Role</button>
            </div>
        </div>
    </div>
</div>


<!-- Delete User Role Modal -->
<div class="modal" id="deleteUserRoleModal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Delete User Role</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" data-bind="with: UserAndRolesConfig.SelectedUserRole">
                <p>Are you sure you want to delete this User Role?</p>
                <!-- Hidden input for Role ID -->
                <input type="hidden" id="deleteUserId" data-bind="value: userId">
                @*<input type="hidden" id="deleteRoleId" data-bind="value: roleId">*@
            </div>
            <div class="modal-footer" data-bind="with: UserAndRolesConfig">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" data-bind="click: function() {DeleteUserRole(); }">Delete</button>
            </div>
        </div>
    </div>
</div>